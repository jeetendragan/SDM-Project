x <- data.frame("SN" = 1:2, "Age" = c(21,15), "Name" = c("John","Dora"))
x
source('~/Documents/Semester 1/Statistical Data Mining/SDM-Project/eda-jeet.R')
x <- data.frame("SN" = 1:3, "Age" = c(21,15, 3), "Name" = c("John","Dora", "asud"))
x
x <- data.frame("SN" = 1:3, "Age" = c(21,15, 3), "Name" = c("John","Dora", NA))
x
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train[,1])
trainSub = train;
for(c in 2:127){
if(sum(is.na(df$col)) > 6000)
{
trainSub = trainSub[,-c];
}
}
for(c in 2:127){
if(sum(is.na(trainSub[, c])) > 6000)
{
trainSub = trainSub[, -c];
}
}
sum(is.na(trainSub[, 2]))
sum(is.na(trainSub[, 3]))
sum(is.na(trainSub[, 100]))
trainSub = trainSub[, -2]
x <- data.frame("SN" = 1:3, "Age" = c(21,15, 3), "Name" = c("John","Dora", NA))
trainSub = train;
df <- df[-which(df[, 1] == NA), ]
x <- na.omit(x)
x
x <- data.frame("SN" = 1:4, "Age" = c(21, 15, 3, 9), "Name" = c("John","Dora", NA, NA))
x
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
trainSub = trainSub[, -c];
}
}
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
trainSub = trainSub[, -c];
}
}
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
trainSub = trainSub[, -c];
}
}
trainSub
for(c in 2:3){
if(sum(is.na(x[, c])) > 2)
{
trainSub = trainSub[, -c];
}
}
trainSub
trainSub = x;
x
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 2)
{
trainSub = trainSub[, -c];
}
}
trainSub
x
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
trainSub = trainSub[, -c];
}
}
trainSub
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 2)
{
trainSub = trainSub[, -c];
}
}
trainSub
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
trainSub = trainSub[, -c];
}
}
trainSub
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
x[, c] <- na.omit(x[, c])
}
}
x
trainSub = x;
for(c in 2:3){
if(sum(is.na(x[, c])) > 1)
{
x[, c] <- na.omit(x[, c])
}
}
x
x = na.omit(x)
x
x <- data.frame("SN" = 1:4, "Age" = c(21,15, 24, NA), "Name" = c("John","Dora", NA, "asud"))
trainSub = x;
x = na.omit(x)
x
x <- data.frame("SN" = 1:4, "Age" = c(21,15, 24, NA), "Name" = c("John","Dora", NA, "asud"))
trainSub = x;
x
x = na.omit(x)
x
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train = na.omit(train)
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train = na.omit(train)
train <- subset(train, !is.na(train$Family_Hist_3))
summary(train)
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train = na.omit(train)
head(train)
x = na.omit(train)
x
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
na_count <-sapply(train, function(y) sum(length(which(is.na(train)))))
na_count <-sapply(train, function(y) sum(length(which(is.na(train)))))
na_count
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
na_count <-sapply(train, function(y) sum(length(which(is.na(train)))))
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count
# find all the columsn that have na
a = na.omit(train$Employment_Info_1)
a
train[, i] = new
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
# find all the columsn that have na
for(i in 1:127){
new = na.omit(train[, i])
train[, i] = new
}
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
# find all the columsn that have na
for(i in 1:127){
col = train[, i];
indices = which(is.na(col));
train = train[-indices, ]
}
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
# find all the columsn that have na
for(i in 1:127){
col = train[, i];
indices = which(is.na(col));
train = train[-indices, ]
}
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
str(train)
x <- data.frame("SN" = 1:4, "Age" = c(21,15, 24, NA), "Name" = c("John","Dora", NA, "asud"))
x[complete.cases(x), ]
train[complete.cases(train)]
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train[complete.cases(train)]
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train = train[complete.cases(train)]
dim(train)
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train = train[complete.cases(train), ]
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
train <- read.csv(file="train.csv", header=TRUE, sep=",")
train <- read.csv(file="train.csv", header=TRUE, sep=",")
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
train_imp = train_imp[complete.cases(train_imp), ]
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count
na_count <-sapply(train_imp, function(y) sum(length(which(is.na(y)))))
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train_imp, function(y) sum(length(which(is.na(y)))))
na_count
na_count <-sapply(train_imp, function(y) sum(length(which(is.na(y)))))
na_count
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train_imp, function(y) sum(length(which(is.na(y)))))
ncols(train)
ncol(train)
names(train) - names(train_imp)
names(train)
names(train_imp)
na_count <-sapply(train_imp, function(y) sum(length(which(is.na(y)))))
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_counnt
na_count
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count
names(train_imp)
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
train_imp = train_imp[,-i]
}
}
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
nulCols = c()
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
c.append(i)
}
}
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
nulCols = c()
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
append(c, i)
}
}
trainNew = train[, -c]
c
train <- read.csv(file="train.csv", header=TRUE, sep=",")
head(train)
train_imp=train
nulCols = c()
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
append(nulCols, i)
}
}
nulCols
nulCols = list()
for (i in 2:127){
if (sum(is.na(train[,i]))>6000){
append(nulCols, i)
}
}
nulCols
lm_summary = summary(lm_model)
rm(list = ls())
train = read.csv('train.csv')
head(train)
sapply(train, function(x) sum(is.na(x)))
sapply(train_imp, function(x) sum(is.na(x)))
which(is.na(train$Employment_Info_4))
summary(train$Employment_Info_4)
cor(train$Response,train$Employment_Info_4)
rm(train_imp)
#removing the columns with NAs greater than 6000(more than 10% of data)
train_imp=train
x = list()
count =1
for (i in 1:128){
if (sum(is.na(train[,i]))>6000){
x[count] = i
count = count+1
}
}
x = unlist(x)
train_imp = train[,-x]
train_imp = na.omit(train_imp)
str(train_imp$Product_Info_2)
train_imp$Product_Info_2 = as.numeric(train_imp$Product_Info_2 )
lm_model = lm(Response~.,data = train_imp)
lm_summary = summary(lm_model)
lm_summmary
lm_summary
names(lm_summary)
lm_summary$coefficients
names(lm_summary)
names(lm_coefficients)
names(lm_summary$coefficients)
str(lm_summary$coefficients)
glm.fit=glm(Response~ . , data=trin_imp)
glm.fit=glm(Response~ . , data=train_imp)
summary(glm.fit)
set.seed(1)
set.seed(1)
totalRows = dim(train_imp)[1]
trainIndices = sample( c(1:totalRows), totalRows*0.75)
finalTrain = train_imp[trainIndices, ]
finalTest = train_imp[-trainIndices, ]
install.packages('nnet')
require(nnet)
rm(list = ls())
train = read.csv('train.csv')
head(train)
sapply(train, function(x) sum(is.na(x)))
sapply(train_imp, function(x) sum(is.na(x)))
which(is.na(train$Employment_Info_4))
summary(train$Employment_Info_4)
cor(train$Response,train$Employment_Info_4)
rm(train_imp)
#removing the columns with NAs greater than 6000(more than 10% of data)
train_imp=train
x = list()
count =1
for (i in 1:128){
if (sum(is.na(train[,i]))>6000){
x[count] = i
count = count+1
}
}
x = unlist(x)
train_imp = train[,-x]
train_imp = na.omit(train_imp)
str(train_imp$Product_Info_2)
train_imp$Product_Info_2 = as.numeric(train_imp$Product_Info_2 )
set.seed(1)
totalRows = dim(train_imp)[1]
trainIndices = sample( c(1:totalRows), totalRows*0.75)
finalTrain = train_imp[trainIndices, ]
finalTest = train_imp[-trainIndices, ]
glm.fit=glm(Response~ . , data=finalTrain)
summary(glm.fit)
glm.probs = predict(glm.fit, newdata= finalTest, type="response")
glm.pred = ifelse(glm.probs > 0.5, TRUE, FALSE)
tbl = table(glm.pred, testData$crim)
tbl
test <- multinom(Response ~ ., data = finalTrain)
summary(test)
